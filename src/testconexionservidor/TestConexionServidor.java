
package testconexionservidor;

import baseDatos.Servidor;
import baseDatos.SqlServerConnection;
import java.sql.Driver;
import javax.swing.JOptionPane;

public class TestConexionServidor extends javax.swing.JFrame {
    
    private String errores = "", ipServidor = "", usuario = "", contra = "", database = "", servidor = "", drivers = "", gestorBd = "", otrasPro = "", instancia= "";
    private boolean encriptacion = false, certificado = false;
    private int puerto = 0;
    public TestConexionServidor() {
        initComponents();
    }

    public void setServidor(){
 
        
        try {
            this.ipServidor = tfIpServidor.getText();
            this.puerto = Integer.parseInt(tfPuerto.getText());
            this.usuario = tfUsuario.getText();
            this.contra = tfContrasena.getText();
            this.database = tfDataBase.getText();
            this.servidor = (String)cbServidor.getSelectedItem();
            this.drivers = tfDrivers.getText();
            this.gestorBd = tfGestorBd.getText();
            otrasPro = tfOtrasPro.getText();
            this.encriptacion = cbEncriptacion.isSelected();
            this.certificado = cbCertificado.isSelected();
            instancia = tfInstancia.getText();
            

            if (!ipServidor.isEmpty() && puerto != 0 && !usuario.isEmpty() && !contra.isEmpty() && !database.isEmpty() && !drivers.isEmpty()) {
                Servidor serv = new Servidor(ipServidor,puerto,usuario,contra,database, servidor, drivers, gestorBd, encriptacion, certificado, instancia);
                errores = ("Ip servidor: " + ipServidor + "\n Puerto: " + puerto + "\n Usuario: " + usuario + "\n Contrasena: " + contra + "\n database: " + database + "\n Servidor: " + (String) cbServidor.getSelectedItem()+"\n Drivers: "+drivers+"\n Gestor de Base de Datos: "+gestorBd+"\n Encriptacon: "+encriptacion+"\n Certificado: "+certificado+"\n Instancia: "+instancia);
                
            } else {
                if (ipServidor.isEmpty()) {
                    errores += "Introduce una IP del servidor \n";
                }if (usuario.isEmpty()) {
                    errores += "Introduce una usuario \n";
                }if (contra.isEmpty()) {
                    errores += "Introduce una contrasena \n";
                }if (database.isEmpty()) {
                    errores += "Introduce una base de datos \n";
                }if (drivers.isEmpty()) {
                    errores += "Introduce un driver \n";
                }if (gestorBd.isEmpty()) {
                    errores += "Introduce un gestor de Base de datos \n";
                }
            }
            taSalida.setText(errores);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Introduce un puerto valido");
            if (!(ipServidor == "" || puerto == 0 || usuario == "" || contra == "" || database == "" || servidor == "")) {
                errores += "Ip servidor: " + ipServidor + "\n Puerto: " + puerto + "\n Usuario: " + usuario + "\n Contrasena: " + contra + "\n database: " + database + "\n Servidor: " + (String) cbServidor.getSelectedItem();
            } else {
                if (ipServidor.isEmpty()) {
                    errores += "Introduce una IP del servidor \n";
                }
                if (usuario.isEmpty()) {
                    errores += "Introduce una usuario \n";
                }
                if (contra.isEmpty()) {
                    errores += "Introduce una contrasena \n";
                }
                if (database.isEmpty()) {
                    errores += "Introduce una base de datos \n";
                }
            }
            taSalida.setText(errores);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbPuerto = new javax.swing.JLabel();
        lbServidor1 = new javax.swing.JLabel();
        lbContrasena = new javax.swing.JLabel();
        lbUsuario = new javax.swing.JLabel();
        tfIpServidor = new javax.swing.JTextField();
        tfOtrasPro = new javax.swing.JTextField();
        tfDataBase = new javax.swing.JTextField();
        tfUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbServidor = new javax.swing.JComboBox<>();
        btConectar = new javax.swing.JButton();
        lbEstado = new javax.swing.JLabel();
        lbEstadoConexion = new javax.swing.JLabel();
        lbDatabase = new javax.swing.JLabel();
        tfContrasena = new javax.swing.JTextField();
        tfDrivers = new javax.swing.JTextField();
        lbDrivers = new javax.swing.JLabel();
        lbInstancia = new javax.swing.JLabel();
        tfPuerto = new javax.swing.JTextField();
        lbOtrasPro = new javax.swing.JLabel();
        tfGestorBd = new javax.swing.JTextField();
        cbEncriptacion = new javax.swing.JCheckBox();
        cbCertificado = new javax.swing.JCheckBox();
        tfInstancia = new javax.swing.JTextField();
        lbGestorbd1 = new javax.swing.JLabel();
        lbConsulta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taConsulta = new javax.swing.JTextArea();
        lbSalida = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taSalida = new javax.swing.JTextArea();
        btLimpia = new javax.swing.JButton();
        btConsulta = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuItem_salir = new javax.swing.JMenuItem();
        menuGestionBD = new javax.swing.JMenu();
        menuItemComprobarDrivers = new javax.swing.JMenuItem();
        menuItemComprobarConexion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbPuerto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPuerto.setText("Puerto");

        lbServidor1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbServidor1.setText("IP Servidor");

        lbContrasena.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContrasena.setText("Contrasena");

        lbUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbUsuario.setText("Usuario");

        tfIpServidor.setText("192.168.112.27");
        tfIpServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIpServidorActionPerformed(evt);
            }
        });

        tfDataBase.setText("depemp2022");
        tfDataBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDataBaseActionPerformed(evt);
            }
        });

        tfUsuario.setText("alumBD");

        jLabel1.setText("Elige a que servidor te quieres conectar");

        cbServidor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sql Server 2008", "Sql Server 2016", "MySQL EEUU", "MySQL Spain", "Localhost" }));

        btConectar.setText("Conectar");
        btConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConectarActionPerformed(evt);
            }
        });

        lbEstado.setText("Estado conexion:");

        lbEstadoConexion.setText("Desconectado");

        lbDatabase.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbDatabase.setText("Database");

        tfContrasena.setText("Gbd2022");

        tfDrivers.setText("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        tfDrivers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDriversActionPerformed(evt);
            }
        });

        lbDrivers.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbDrivers.setText("Drivers");

        lbInstancia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbInstancia.setText("Instancia");

        tfPuerto.setText("1433");

        lbOtrasPro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbOtrasPro.setText("Otras Propiedades");

        cbEncriptacion.setSelected(true);
        cbEncriptacion.setText("Encriptacion");

        cbCertificado.setSelected(true);
        cbCertificado.setText("Certificado");

        lbGestorbd1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbGestorbd1.setText("Gestor BD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbServidor1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbGestorbd1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbInstancia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbOtrasPro, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfDrivers, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDataBase, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfContrasena, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfIpServidor, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPuerto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfGestorBd)
                            .addComponent(tfInstancia, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btConectar))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbEncriptacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                .addComponent(cbCertificado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbEstadoConexion))))
                    .addComponent(tfOtrasPro, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbServidor1)
                    .addComponent(tfIpServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEncriptacion))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPuerto)
                    .addComponent(tfPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCertificado))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUsuario)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbContrasena)
                            .addComponent(tfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btConectar))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDatabase)
                    .addComponent(tfDataBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDrivers)
                    .addComponent(tfDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfGestorBd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbGestorbd1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbEstado)
                        .addComponent(lbEstadoConexion)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfInstancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbInstancia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOtrasPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbOtrasPro))
                .addGap(19, 19, 19))
        );

        lbConsulta.setText("Consulta SQL");

        taConsulta.setColumns(20);
        taConsulta.setRows(5);
        jScrollPane1.setViewportView(taConsulta);

        lbSalida.setText("Salida Consulta / Exception");

        taSalida.setColumns(20);
        taSalida.setRows(5);
        jScrollPane2.setViewportView(taSalida);

        btLimpia.setText("Limpia");
        btLimpia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiaActionPerformed(evt);
            }
        });

        btConsulta.setText("Consulta");
        btConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultaActionPerformed(evt);
            }
        });

        menuArchivo.setText("Archivo");

        menuItem_salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        menuItem_salir.setText("Salir");
        menuItem_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_salirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuItem_salir);

        jMenuBar1.add(menuArchivo);

        menuGestionBD.setText("Gestion BD");

        menuItemComprobarDrivers.setText("Comprobar drivers");
        menuItemComprobarDrivers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemComprobarDriversActionPerformed(evt);
            }
        });
        menuGestionBD.add(menuItemComprobarDrivers);

        menuItemComprobarConexion.setText("Comprobar conexion");
        menuItemComprobarConexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemComprobarConexionActionPerformed(evt);
            }
        });
        menuGestionBD.add(menuItemComprobarConexion);

        jMenuBar1.add(menuGestionBD);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSalida)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btLimpia))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btConsulta))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btConsulta))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addComponent(lbSalida)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btLimpia))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLimpiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiaActionPerformed
        taSalida.setText("");
        taConsulta.setText("");
        tfIpServidor.setText("");
        tfOtrasPro.setText("");
        tfUsuario.setText("");
        tfContrasena.setText("");
        tfDataBase.setText("");
        tfDrivers.setText("");
        
    }//GEN-LAST:event_btLimpiaActionPerformed

    private void menuItem_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItem_salirActionPerformed

    private void menuItemComprobarDriversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemComprobarDriversActionPerformed
        
//ESTO HAY QUE RETOCARLO
        try { 
            Class.forName(tfDrivers.getText());
               System.out.println("Driver funciona correctamente."); 
                JOptionPane.showMessageDialog(TestConexionServidor.this, "Driver correctamente detectado.", "Evento en el menu", JOptionPane.INFORMATION_MESSAGE);
                } catch (ClassNotFoundException e) {
                       System.out.println("Error: " + e.getMessage());
                       System.out.println("Driver: "+drivers);
                        JOptionPane.showMessageDialog(TestConexionServidor.this, "Error el driver no se ha detectado", "Evento en el menu", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_menuItemComprobarDriversActionPerformed

    private void menuItemComprobarConexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemComprobarConexionActionPerformed
        //SqlServerConection(String ipservidor, String database, String user, String pass)
        setServidor();
        SqlServerConnection conexionBD = new SqlServerConnection(ipServidor,database,usuario,contra, encriptacion, certificado);
        //cogemos los artículos de la BD y filtramos por la marca 900

        conexionBD.listadoTablaArticulos(taSalida);
    }//GEN-LAST:event_menuItemComprobarConexionActionPerformed

    private void tfDriversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDriversActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDriversActionPerformed

    private void tfIpServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIpServidorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIpServidorActionPerformed

    private void btConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultaActionPerformed
        String consulta = taConsulta.getText();
        SqlServerConnection conexion = new SqlServerConnection(ipServidor,database,usuario,contra, encriptacion, certificado);
        conexion.listadoTablaArticulos(taSalida);
        
    }//GEN-LAST:event_btConsultaActionPerformed

    private void tfDataBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDataBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDataBaseActionPerformed

    private void btConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConectarActionPerformed
        setServidor();

    }//GEN-LAST:event_btConectarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestConexionServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestConexionServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestConexionServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestConexionServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestConexionServidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConectar;
    private javax.swing.JButton btConsulta;
    private javax.swing.JButton btLimpia;
    private javax.swing.JCheckBox cbCertificado;
    private javax.swing.JCheckBox cbEncriptacion;
    private javax.swing.JComboBox<String> cbServidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbConsulta;
    private javax.swing.JLabel lbContrasena;
    private javax.swing.JLabel lbDatabase;
    private javax.swing.JLabel lbDrivers;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbEstadoConexion;
    private javax.swing.JLabel lbGestorbd1;
    private javax.swing.JLabel lbInstancia;
    private javax.swing.JLabel lbOtrasPro;
    private javax.swing.JLabel lbPuerto;
    private javax.swing.JLabel lbSalida;
    private javax.swing.JLabel lbServidor1;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuGestionBD;
    private javax.swing.JMenuItem menuItemComprobarConexion;
    private javax.swing.JMenuItem menuItemComprobarDrivers;
    private javax.swing.JMenuItem menuItem_salir;
    private javax.swing.JTextArea taConsulta;
    private javax.swing.JTextArea taSalida;
    private javax.swing.JTextField tfContrasena;
    private javax.swing.JTextField tfDataBase;
    private javax.swing.JTextField tfDrivers;
    private javax.swing.JTextField tfGestorBd;
    private javax.swing.JTextField tfInstancia;
    private javax.swing.JTextField tfIpServidor;
    private javax.swing.JTextField tfOtrasPro;
    private javax.swing.JTextField tfPuerto;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
